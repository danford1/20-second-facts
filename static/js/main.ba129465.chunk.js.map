{"version":3,"sources":["components/timer.js","App.js","index.js"],"names":["Timer","state","isPlaying","durationSeconds","renderTime","colors","startTimer","setState","document","getElementsByClassName","play","resetTimer","this","size","trailColor","strokeWidth","value","className","onClick","src","onComplete","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"+SA+E2BA,E,4MA3EvBC,MAAQ,CACJC,WAAW,EACXC,gBAAiB,GACjBC,WAAY,GACZC,OAAQ,CAAC,CAAC,UAAW,K,EAGzBC,WAAa,WACT,EAAKC,SAAS,CACVL,WAAW,EACXG,OAAQ,CAAC,CAAC,UAAW,KAAO,CAAC,UAAW,KAAO,CAAC,cAGpCG,SAASC,uBAAuB,iBAAiB,GACzDC,Q,EAGZC,WAAa,YACoB,IAAzB,EAAKV,MAAMC,WACX,EAAKK,SAAS,CACVL,WAAW,EACXE,WAAY,EAAKH,MAAMG,WACvBC,OAAQ,CAAC,CAAC,UAAW,KAAO,CAAC,UAAW,KAAO,CAAC,e,uDAKlD,IAAD,OACCH,EAAYU,KAAKX,MAAMC,UAEvBC,EAAkBS,KAAKX,MAAME,gBAE7BE,EAASO,KAAKX,MAAMI,OA4Bd,OACI,kBAAC,uBAAD,CACAH,UAAWA,EACXW,KAAM,IACNV,gBAAiBA,EACjBE,OAAQA,EACRS,WAAY,UACZC,YAAa,GACbX,WAlCG,SAAAY,GACf,OAAc,IAAVA,EAEI,yBAAKC,UAAU,SACf,4BAAQA,UAAU,YAAYC,QAAS,EAAKP,YAA5C,UAIU,KAAVK,EAEI,yBAAKC,UAAU,SACf,4BAAQA,UAAU,YAAYC,QAAS,EAAKZ,YAA5C,SACA,2BAAOW,UAAU,iBACb,4BAAQE,IAAI,mEAKhBH,GAAS,GAEL,yBAAKC,UAAU,SACf,yBAAKA,UAAU,SAASD,SAHhC,GAiBII,WAAY,iBAAM,EAAC,U,GAtEvBC,aCsBLC,G,mLAhBX,OACE,yBAAKL,UAAU,OACX,yDAGA,uBAAGA,UAAU,YAAb,kBAGA,yBAAKA,UAAU,SACX,kBAAC,EAAD,Y,GAXII,cCFlBE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjB,SAASkB,eAAe,W","file":"static/js/main.ba129465.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nclass Timer extends Component {\n    state = {\n        isPlaying: false,\n        durationSeconds: 21,\n        renderTime: 21,\n        colors: [[\"#dadfe0\", 1]]\n    };\n\n    startTimer = () => {\n        this.setState({\n            isPlaying: true,\n            colors: [[\"#ee5253\", 0.33], [\"#feca57\", 0.33], [\"#1abc9c\"]]\n        });\n\n        const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n        audioEl.play()\n    };\n\n    resetTimer = () => {\n        if (this.state.isPlaying === false) {\n            this.setState({\n                isPlaying: true,\n                renderTime: this.state.renderTime,\n                colors: [[\"#ee5253\", 0.33], [\"#feca57\", 0.33], [\"#1abc9c\"]]\n            });\n        }\n    };\n\n    render() {\n        const isPlaying = this.state.isPlaying;\n\n        const durationSeconds = this.state.durationSeconds;\n\n        const colors = this.state.colors;\n\n        const renderTime = value => {\n            if (value === 0) {\n                return (\n                    <div className=\"timer\">\n                    <button className=\"btn-white\" onClick={this.resetTimer}>Start</button>\n                    </div>\n                )}\n\n                if (value === 21) {\n                    return (\n                        <div className=\"timer\">\n                        <button className=\"btn-white\" onClick={this.startTimer}>Start</button>\n                        <audio className=\"audio-element\">\n                            <source src=\"https://api.coderrocketfuel.com/assets/pomodoro-times-up.mp3\"></source>\n                        </audio>\n                        </div>\n                    )}\n\n                    if (value <= 20) {\n                        return (\n                            <div className=\"timer\">\n                            <div className=\"value\">{value}</div>\n                            </div>\n                        )}\n                    };\n\n                    return (\n                        <CountdownCircleTimer\n                        isPlaying={isPlaying}\n                        size={240}\n                        durationSeconds={durationSeconds}\n                        colors={colors}\n                        trailColor={\"#dadfe0\"}\n                        strokeWidth={20}\n                        renderTime={renderTime}\n                        onComplete={() => [false]}\n                        />\n                    );\n                }\n            }\n\n            export default Timer;\n","import React, { Component } from \"react\";\n\nimport Timer from \"./components/timer\";\n\nimport \"./style.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <h1>\n            Wash hands, learn things.\n          </h1>\n          <p className=\"subtitle\">\n          #20secondfacts\n          </p>\n          <div className=\"timer\">\n              <Timer />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}